{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Living Voices Dataset Schema",
  "version": "1.0.0",
  "description": "JSON schema definitions for the Living Voices Dataset structure",
  "definitions": {
    "structured_document": {
      "type": "object",
      "description": "A structured document in the dataset",
      "required": ["id", "type", "title", "source", "content"],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique document identifier",
          "pattern": "^[a-z0-9_]+$"
        },
        "type": {
          "type": "string",
          "description": "Document type classification",
          "enum": [
            "poem",
            "biography",
            "related_article",
            "speech_supplement",
            "supplementary_material"
          ]
        },
        "title": {
          "type": "string",
          "description": "Document title"
        },
        "source": {
          "type": "object",
          "description": "Source information",
          "properties": {
            "url": {
              "type": "string",
              "format": "uri"
            },
            "type": {
              "type": "string"
            },
            "wikipedia_page": {
              "type": "string"
            },
            "collected": {
              "type": "string",
              "format": "date-time"
            },
            "processed": {
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "content": {
          "type": "object",
          "description": "Document content",
          "properties": {
            "full_text": {
              "type": "string"
            },
            "word_count": {
              "type": "integer",
              "minimum": 0
            },
            "sections": {
              "type": "array"
            }
          }
        },
        "metadata": {
          "type": "object",
          "description": "Additional metadata",
          "properties": {
            "persona": {
              "type": "string"
            },
            "category": {
              "type": "string"
            },
            "language": {
              "type": "string"
            },
            "time_period": {
              "type": "string"
            }
          }
        }
      }
    },
    "training_chunk": {
      "type": "object",
      "description": "A training chunk for model fine-tuning",
      "required": ["chunk_id", "source_document_id"],
      "properties": {
        "chunk_id": {
          "type": "string",
          "description": "Unique chunk identifier"
        },
        "id": {
          "type": "string",
          "description": "Alternative chunk identifier"
        },
        "source_document_id": {
          "type": "string",
          "description": "Reference to source document"
        },
        "document_id": {
          "type": "string",
          "description": "Alternative reference to source document"
        },
        "chunk_type": {
          "type": "string",
          "description": "Type of chunk content"
        },
        "type": {
          "type": "string",
          "description": "Alternative chunk type field"
        },
        "chunk_index": {
          "type": "integer",
          "description": "Index of this chunk in document",
          "minimum": 1
        },
        "total_chunks": {
          "type": "integer",
          "description": "Total chunks in document",
          "minimum": 1
        },
        "content": {
          "type": "string",
          "description": "Chunk text content (Elon Musk format)"
        },
        "text": {
          "type": "string",
          "description": "Chunk text content (Queen Elizabeth II format)"
        },
        "title": {
          "type": "string",
          "description": "Chunk or document title"
        },
        "document_title": {
          "type": "string",
          "description": "Title of source document"
        },
        "char_count": {
          "type": "integer",
          "description": "Character count (for Chinese text)",
          "minimum": 0
        },
        "word_count": {
          "type": "integer",
          "description": "Word count (for English text)",
          "minimum": 0
        },
        "metadata": {
          "type": "object",
          "description": "Chunk metadata",
          "properties": {
            "persona": {
              "type": "string"
            },
            "time_period": {
              "type": "string"
            },
            "language": {
              "type": "string"
            },
            "document_type": {
              "type": "string"
            },
            "source_category": {
              "type": "string"
            }
          }
        }
      }
    },
    "validation_report": {
      "type": "object",
      "description": "Validation report for a persona dataset",
      "required": ["dataset", "validation_date", "total_documents", "total_chunks"],
      "properties": {
        "dataset": {
          "type": "string",
          "description": "Persona identifier"
        },
        "validation_date": {
          "type": "string",
          "format": "date-time",
          "description": "Date of validation"
        },
        "total_documents": {
          "type": "integer",
          "minimum": 0,
          "description": "Total number of documents"
        },
        "total_chunks": {
          "type": "integer",
          "minimum": 0,
          "description": "Total number of training chunks"
        },
        "document_types": {
          "type": "object",
          "description": "Count by document type"
        },
        "coverage": {
          "type": "object",
          "description": "Data coverage metrics"
        }
      }
    },
    "version_info": {
      "type": "object",
      "description": "Dataset version information",
      "required": ["dataset_name", "version", "release_date", "status"],
      "properties": {
        "dataset_name": {
          "type": "string"
        },
        "version": {
          "type": "string",
          "pattern": "^\\d+\\.\\d+\\.\\d+$",
          "description": "Semantic version number"
        },
        "release_date": {
          "type": "string",
          "format": "date"
        },
        "status": {
          "type": "string",
          "enum": ["alpha", "beta", "stable", "deprecated"]
        },
        "description": {
          "type": "string"
        },
        "personas": {
          "type": "object",
          "description": "Persona information"
        },
        "compatibility": {
          "type": "object",
          "description": "Technical compatibility info"
        },
        "license": {
          "type": "string"
        }
      }
    },
    "statistics": {
      "type": "object",
      "description": "Dataset statistics",
      "required": ["generated_date", "dataset_version", "overview", "personas"],
      "properties": {
        "generated_date": {
          "type": "string",
          "format": "date-time"
        },
        "dataset_version": {
          "type": "string"
        },
        "overview": {
          "type": "object",
          "required": ["total_personas", "total_documents", "total_chunks"],
          "properties": {
            "total_personas": {
              "type": "integer",
              "minimum": 1
            },
            "total_documents": {
              "type": "integer",
              "minimum": 0
            },
            "total_chunks": {
              "type": "integer",
              "minimum": 0
            },
            "total_words": {
              "type": "integer",
              "minimum": 0
            }
          }
        },
        "personas": {
          "type": "object",
          "description": "Per-persona statistics"
        }
      }
    }
  },
  "file_structures": {
    "structured_documents.json": {
      "type": "array",
      "description": "Array of structured documents",
      "items": {
        "$ref": "#/definitions/structured_document"
      }
    },
    "training_chunks.json": {
      "type": "array",
      "description": "Array of training chunks",
      "items": {
        "$ref": "#/definitions/training_chunk"
      }
    },
    "validation_report.json": {
      "$ref": "#/definitions/validation_report"
    },
    "version_info.json": {
      "$ref": "#/definitions/version_info"
    },
    "statistics.json": {
      "$ref": "#/definitions/statistics"
    }
  },
  "directory_structure": {
    "description": "Standard directory structure for the dataset",
    "structure": {
      "datasets/": {
        "README.md": "Main dataset documentation",
        "DATA_COLLECTION_STANDARDS.md": "Data collection guidelines",
        "metadata/": {
          "README.md": "Metadata documentation",
          "version_info.json": "Version information",
          "statistics.json": "Dataset statistics",
          "sources.json": "Source attribution",
          "changelog.md": "Version history",
          "schema.json": "This schema file"
        },
        "{persona_id}/": {
          "README.md": "Persona-specific documentation",
          "raw_data/": "Original source materials",
          "processed_data/": {
            "structured_documents.json": "Processed documents",
            "training_chunks.json": "Training chunks",
            "validation_report.json": "Validation results"
          }
        }
      }
    }
  },
  "usage_examples": {
    "load_documents": {
      "description": "Load structured documents for a persona",
      "code": "import json\nwith open('du_fu/processed_data/structured_documents.json', 'r', encoding='utf-8') as f:\n    documents = json.load(f)"
    },
    "load_chunks": {
      "description": "Load training chunks for a persona",
      "code": "import json\nwith open('elon_musk/processed_data/training_chunks.json', 'r', encoding='utf-8') as f:\n    chunks = json.load(f)"
    },
    "validate_schema": {
      "description": "Validate data against schema",
      "code": "import json\nimport jsonschema\n\nwith open('metadata/schema.json', 'r') as f:\n    schema = json.load(f)\n\nwith open('queen_elizabeth_ii/processed_data/structured_documents.json', 'r') as f:\n    data = json.load(f)\n\njsonschema.validate(data, schema['file_structures']['structured_documents.json'])"
    }
  },
  "data_quality_standards": {
    "required_fields": [
      "All documents must have unique IDs",
      "All chunks must reference valid document IDs",
      "Timestamps must be in ISO 8601 format",
      "Text content must be non-empty"
    ],
    "validation_checks": [
      "Schema compliance",
      "Referential integrity",
      "Content completeness",
      "Metadata consistency"
    ],
    "encoding": "UTF-8",
    "line_endings": "LF (Unix-style)",
    "indentation": "2 spaces for JSON files"
  },
  "versioning": {
    "semantic_versioning": "MAJOR.MINOR.PATCH",
    "major": "Incompatible structural changes",
    "minor": "New personas or backwards-compatible additions",
    "patch": "Bug fixes and corrections"
  }
}
